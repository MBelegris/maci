// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;

abstract contract MerkleZeros {
    uint256[33] internal zeros;

    // Quinary tree zeros (Keccak hash of 'Maci')
    constructor() {
        zeros[0] = uint256(8370432830353022751713833565135785980866757267633941821328460903436894336785);
        zeros[1] = uint256(13884788941151956495395748336790392799095697605856513866358718750913191383099);
        zeros[2] = uint256(20151320872539350567140948327828339447068902698258579992690717693236800839922);
        zeros[3] = uint256(14561573777094062107774144026283255187723488916412727556950781620684854853311);
        zeros[4] = uint256(92689261496718953529068761297192614517447835027990631171893207868239906975);
        zeros[5] = uint256(20222841340700969082602210902676763315341120386423579117470953469129029076141);
        zeros[6] = uint256(10790534830244888532464593046343978391331011415385888505609487742509080956672);
        zeros[7] = uint256(132754508373791150092841571472300962181732571891261524597942687308831538747);
        zeros[8] = uint256(156323061751758611790661757923389938824537515504161799457510123828829723177);
        zeros[9] = uint256(14430076698250841983315842291089922984001811787535961427645844124108891098320);
        zeros[10] = uint256(21454621605166609972982615013188637247291915648476215935749417536763425424481);
        zeros[11] = uint256(9956303029544434381316533961190218953204389010578429814803920682676274612865);
        zeros[12] = uint256(5334007079411452863225642315857357042810714192890489218676875598272077374336);
        zeros[13] = uint256(10437221628023102750759762456020178744975158840450774027955513254792439382002);
        zeros[14] = uint256(480181662118295474750689317308252023668589913227136503750460027449837066909);
        zeros[15] = uint256(8038149944664318763154270754270901014303624124228041761882072290918509799677);
        zeros[16] = uint256(6453657403629831631397507519379948188236965292392483858227867992619938995079);
        zeros[17] = uint256(18291736684993050838273707594559172948114396745303484744485910421643403887266);
        zeros[18] = uint256(13996216863362167916557713769044704608503627848254063455583743447680256050125);
        zeros[19] = uint256(6657436242394678197089365998243135121470874590523199060501990292586595372630);
        zeros[20] = uint256(11960498663187443165696478480450589940568373268198715437786908430419364149350);
        zeros[21] = uint256(19613312280164593062874432865617595445188948832914916380574348197709849709898);
        zeros[22] = uint256(13110281911178469601017484583286141225589013193414875186547679452050524500027);
        zeros[23] = uint256(15333317323610737151495997161025956657897268429433417249295486568667530692907);
        zeros[24] = uint256(12847318164816014787165324824211520760193193046831297966979487644974612813163);
        zeros[25] = uint256(1512947187171941063605471878460763083388801834317948622629486630155256025664);
        zeros[26] = uint256(562590781336803938005357396410666791955993125957667899994871446654425339595);
        zeros[27] = uint256(9345178741415095842883536244896645476649271061731575327322850017809124449375);
        zeros[28] = uint256(480147561575344210360626643989315545983208463481527092054269707487274939453);
        zeros[29] = uint256(10515323615683794930645272770142919681142627501149484826860625625839763219222);
        zeros[30] = uint256(4859543785929675506682705068606634223921840219882209817443408855020375651338);
        zeros[31] = uint256(15276496745216926361214074646994276333671239763363249706874349376760494397932);
        zeros[32] = uint256(10545148394726972355604159179328571821841600809914141936338921584856610165695);
    }
}


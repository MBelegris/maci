// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;

abstract contract MerkleZeros {
    uint256[33] internal zeros;

    // Binary tree zeros (Keccak hash of 'Maci')
    constructor() {
        zeros[0] = uint256(8370432830353022751713833565135785980866757267633941821328460903436894336785);
        zeros[1] = uint256(13157336094124957193666784364775238423578741879468844419772355252627448896121);
        zeros[2] = uint256(8765701585175044041973236863018966751432605394394872512718722530175806029905);
        zeros[3] = uint256(20347532509156142747233673567258443602489079472108484114773804370222053902920);
        zeros[4] = uint256(16758792176909501045221258251768104031875936822347698700968838920522199520737);
        zeros[5] = uint256(8921090802697634587187937898863974384895139286575807004395174208992031127644);
        zeros[6] = uint256(6611919814428078795717152877706592421474330196760649696557363488196776821866);
        zeros[7] = uint256(5765719442387335945536410940027797488012530339462355417367646714768822423147);
        zeros[8] = uint256(1298299516836056988149837958861143439676589292027812810245409416323638583988);
        zeros[9] = uint256(9519078865482743344984658830047661561234627267581390116687455805412941249973);
        zeros[10] = uint256(12964237738273941211095155894410092278440144035241165354626488041807462096964);
        zeros[11] = uint256(4383267327258097177963745541042073873060855181674111420077336741025394391529);
        zeros[12] = uint256(19322510420596860940256919215288661096154835532882909561939662762657963673653);
        zeros[13] = uint256(9151764175344985438161833446808830684159328880983072630099585771988971629891);
        zeros[14] = uint256(579664394231091661294260752647900311285968184775752607968995988928355721754);
        zeros[15] = uint256(130608914925578619205844915849097090655601708465282837214250401799032032949);
        zeros[16] = uint256(10499346107286452858404851778076559544393467895723832933287251577564936143763);
        zeros[17] = uint256(359938107879169956634228783943348707400591412288368178636961753087229898585);
        zeros[18] = uint256(10793887705218485927776311972329371798589289875226777287318436426274250115001);
        zeros[19] = uint256(11929361966053415563966945380540014312985789170339209194619486606841003420500);
        zeros[20] = uint256(3952746229081245222032732447342368039089786374549581019785023808280430439512);
        zeros[21] = uint256(2796474852475790112326498806450291128770779548641980316528314035482931675018);
        zeros[22] = uint256(16912752845196731590769553127260709252980241822741897667605320284464279098358);
        zeros[23] = uint256(9480814699287038647810458126312839635284087986436236729162770432344439568559);
        zeros[24] = uint256(19457464465733655642930354378448139998032101783103240031289966704768614966649);
        zeros[25] = uint256(15363838573267466236304024179703093132460427084637819924413236545002021478103);
        zeros[26] = uint256(10274851774890543332282596004473735554294048914900248471882787116480916403363);
        zeros[27] = uint256(6169855075184112880295706649599760064732543410007667566134981855869968075703);
        zeros[28] = uint256(12017940659191995360006723673387380344919891638099552087201316393208713147753);
        zeros[29] = uint256(20263564970537776581344411891930223084491767182727363363157493310401334677133);
        zeros[30] = uint256(10898054119203917282053566507301288623017596525333656888550554339966012705731);
        zeros[31] = uint256(18068675689756721602854649867763817926988319127285592032795952966981116020020);
        zeros[32] = uint256(9186301535884154251477464089766666605782856482573256688721406654810777983590);
    }
}

